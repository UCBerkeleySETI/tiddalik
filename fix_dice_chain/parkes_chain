#! /bin/csh

if (x == x$2) then
  echo "chain spliced_file.fil final_dir"
  echo " "
  echo "will attempt to do the following on the filterbank file in question:"
  echo "1. pad it if necessary"
  echo "2. fix the filterbank headers"
  echo "3. dice it (trim the useless parts of the bands off the edges)"
  echo "4. convert to hdf5"
  exit 0
endif

if (! -f $1) then
  echo "unknown file: $1"
  exit 0
endif

set FINALDIR = $2

cd $FINALDIR
set AVAIL = `df . | tail -1 | awk '{printf("%d",$4/(1024*1024))}'`
if ($AVAIL < 500) then
  echo "not enough space available in $2 - exiting..."
  exit 0
endif

set LOFREQ = 2744
set HIFREQ = 3444

set FILFILE = $1

echo -n "starting: "
date
set START = `date '+%s'`


echo ==========================================
echo FIXING:
echo ==========================================

set FITS_FIXER = /home/sci/half_fine_wrong_way_fix.rb

$FITS_FIXER $FILFILE

echo ==========================================
echo DICING AND HDF5ING:
echo ==========================================

set NEWNAME = `basename $FILFILE | sed 's/.fil$/.creating.h5/'`
bldice -f $FILFILE -o /$FINALDIR/$NEWNAME -b $LOFREQ -e $HIFREQ -x h5
# fil2h5  -n /$FINALDIR/$NEWNAME $FILFILE

set FINALNAME = `echo $NEWNAME | sed 's/.creating.h5$/.h5/'`
mv $FINALDIR/$NEWNAME $FINALDIR/$FINALNAME

############# cleanup...

mv $FILFILE ${FILFILE}.x2h # x2h -> xferred to holding

echo -n "ending: "
date
set END = `date '+%s'`
set SECONDS = `echo $START $END | awk '{print $2-$1}'`
echo "total: $SECONDS seconds"
